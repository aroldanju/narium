[gd_scene load_steps=9 format=2]

[ext_resource path="res://scenes/Transition.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/images/background_level_01.png" type="Texture" id=2]
[ext_resource path="res://assets/images/player.png" type="Texture" id=3]
[ext_resource path="res://resources/theme_default.tres" type="Theme" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var transition := $CanvasLayer/Control/Transition
onready var player := $Player
onready var playerAnimation := $Player/Sprite/AnimationPlayer
onready var labelLevel := $CanvasLayer/Control/LabelLevel
onready var labelLevelAnimation := $CanvasLayer/Control/LabelLevel/AnimationPlayer

export(float) var speed = 100.0

var velocity = Vector2()

func _ready():
	self.transition.fade_in()
	self.playerAnimation.play(\"default\")

func _on_Transition_on_fade_out_finish():
	pass

func _on_Transition_on_fade_in_finish():
	self.labelLevelAnimation.play(\"fade_in\")

func input_player():
	self.velocity = Vector2()
	
	if Input.is_action_pressed(\"left\"):
		self.velocity.x += -1
	if Input.is_action_pressed(\"right\"):
		self.velocity.x += 1
	if Input.is_action_pressed(\"up\"):
		self.velocity.y += -1
	if Input.is_action_pressed(\"down\"):
		self.velocity.y += 1
	
	self.velocity = self.velocity.normalized() * self.speed

func _physics_process(delta):
	input_player()
	self.velocity = self.player.move_and_slide(self.velocity)
"

[sub_resource type="Animation" id=3]
resource_name = "default"
length = 0.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 1 ]
}

[sub_resource type="CapsuleShape2D" id=2]
radius = 4.0
height = 12.0

[sub_resource type="Animation" id=4]
resource_name = "fade_in"
length = 3.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2, 3, 3.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ true, true, false, true, false, true, false, true ]
}

[node name="Game" type="Node2D"]
script = SubResource( 1 )

[node name="Background" type="Sprite" parent="."]
position = Vector2( 240, 135 )
texture = ExtResource( 2 )

[node name="Player" type="KinematicBody2D" parent="."]
position = Vector2( 81, 135 )

[node name="Sprite" type="Sprite" parent="Player"]
texture = ExtResource( 3 )
vframes = 3

[node name="AnimationPlayer" type="AnimationPlayer" parent="Player/Sprite"]
anims/default = SubResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
rotation = 1.5708
shape = SubResource( 2 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Control" type="Control" parent="CanvasLayer"]
margin_right = 480.0
margin_bottom = 270.0
theme = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Transition" parent="CanvasLayer/Control" instance=ExtResource( 1 )]
visible = false

[node name="LabelLevel" type="Label" parent="CanvasLayer/Control"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.5
margin_top = -5.0
margin_right = 20.5
margin_bottom = 5.0
text = "LEVEL 1
READY"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/Control/LabelLevel"]
anims/fade_in = SubResource( 4 )

[connection signal="on_fade_in_finish" from="CanvasLayer/Control/Transition" to="." method="_on_Transition_on_fade_in_finish"]
[connection signal="on_fade_out_finish" from="CanvasLayer/Control/Transition" to="." method="_on_Transition_on_fade_out_finish"]

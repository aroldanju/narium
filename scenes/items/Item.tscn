[gd_scene load_steps=4 format=2]

[ext_resource path="res://scenes/items/ItemBeam.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/items/ItemMissile.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "tool

signal on_collision

extends Node2D

func get_class(): return \"Item\"

export(Global.ItemType) var type = Global.ItemType.ITEM_BEAM setget set_type, get_type

onready var itemBeam := $ItemBeam
onready var itemMissile := $ItemMissile

var _currentItem = null

func _ready():
	set_type(self.type)

func get_type():
	return type

func set_type(t):
	type = t
	_apply_type()

func _apply_type():
	_hide_all_items()
	
	match self.type:
		Global.ItemType.ITEM_BEAM:
			self._currentItem = self.itemBeam
			$ItemBeam.visible = true
			$ItemBeam/CollisionShape2D.disabled = false
		Global.ItemType.ITEM_MISSILE:
			self._currentItem = self.itemMissile
			$ItemMissile.visible = true
			$ItemMissile/CollisionShape2D.disabled = false
		_:
			print(\"[Item::create]: unknown item type: \" + String(self.type))

func create(type):
	set_type(type)

func _hide_all_items():
	$ItemBeam.visible = false
	$ItemBeam/CollisionShape2D.disabled = true
	$ItemMissile.visible = false
	$ItemMissile/CollisionShape2D.disabled = true
	#self.itemBeam.visible = false
	#self.itemMissile.visible = false

func _on_item_collision(item, what):
	emit_signal(\"on_collision\", self, what)
"

[node name="Item" type="Node2D"]
script = SubResource( 1 )

[node name="ItemBeam" parent="." instance=ExtResource( 1 )]

[node name="ItemMissile" parent="." instance=ExtResource( 2 )]
visible = false

[connection signal="on_collision" from="ItemBeam" to="." method="_on_item_collision"]
[connection signal="on_collision" from="ItemMissile" to="." method="_on_item_collision"]
